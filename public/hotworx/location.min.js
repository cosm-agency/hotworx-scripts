let map,infoWindow,geocode,bounds,cluster,markers=[],entries=localStorage.getItem("entries")?JSON.parse(localStorage.getItem("entries")):[];const mapLeftMargin=window.innerWidth>991?437:0,states={AL:"Alabama",AK:"Alaska",AS:"American Samoa",AZ:"Arizona",AR:"Arkansas",CA:"California",CO:"Colorado",CT:"Connecticut",DE:"Delaware",DC:"District Of Columbia",FM:"Federated States Of Micronesia",FL:"Florida",GA:"Georgia",GU:"Guam",HI:"Hawaii",ID:"Idaho",IL:"Illinois",IN:"Indiana",IA:"Iowa",KS:"Kansas",KY:"Kentucky",LA:"Louisiana",ME:"Maine",MH:"Marshall Islands",MD:"Maryland",MA:"Massachusetts",MI:"Michigan",MN:"Minnesota",MS:"Mississippi",MO:"Missouri",MT:"Montana",NE:"Nebraska",NV:"Nevada",NH:"New Hampshire",NJ:"New Jersey",NM:"New Mexico",NY:"New York",NC:"North Carolina",ND:"North Dakota",MP:"Northern Mariana Islands",OH:"Ohio",OK:"Oklahoma",OR:"Oregon",PW:"Palau",PA:"Pennsylvania",PR:"Puerto Rico",RI:"Rhode Island",SC:"South Carolina",SD:"South Dakota",TN:"Tennessee",TX:"Texas",UT:"Utah",VT:"Vermont",VI:"Virgin Islands",VA:"Virginia",WA:"Washington",WV:"West Virginia",WI:"Wisconsin",WY:"Wyoming"};function renderMarkers(e,t){if(!e.length)return!1;bounds=new google.maps.LatLngBounds,markers.forEach(e=>{e.setMap(null)}),markers=[],e.forEach(e=>{if(e.latitude&&e.longitude){const o=new google.maps.Marker({position:{lat:+e.latitude,lng:+e.longitude},map:t,title:e.name,icon:"https://uploads-ssl.webflow.com/5ea4822fd3a80f6c9cc4fdd9/5f81e4e7374a417200dc2551_Geo_Tag.svg"});o.addListener("click",()=>{document.querySelector("#search_field input").value=e.name,search(e.name,["name","fromMarkerSelect"])}),markers.push(o),bounds.extend(new google.maps.LatLng(+e.latitude,+e.longitude))}}),t.fitBounds(bounds,{left:mapLeftMargin,bottom:0,top:0,right:0}),cluster&&(cluster.clearMarkers(),cluster.setMap(null)),cluster=new MarkerClusterer(t,markers,{styles:[{textColor:"white",textSize:16,anchorIcon:[40,0],fontFamily:"Helvetica Neue, sans-serif",height:52,fontWeight:"500",anchorText:[10,-5],width:54,url:"https://firebasestorage.googleapis.com/v0/b/cosm-870d4.appspot.com/o/cluster%2Fm1.svg?alt=media&token=2f77f4ce-3db1-41e8-ad5b-0e90eacfc3a3"}]})}function getAllLocationData(){return new Promise((e,t)=>{$.ajax({async:!0,crossDomain:!0,cache:!0,url:"https://scripts.cosmagency.com/studios",method:"GET",success:function(t){e(t.data)},error:function(e){t(e)}})})}function geocodeAddress(e,t){if(infowindow=new google.maps.InfoWindow,""===e)return localStorage.setItem("searchedAddress",""),renderSearchResults(entries),void renderMarkers(entries,map);geocoder.geocode({address:e},(o,n)=>{if("OK"===n){map.setCenter(o[0].geometry.location),calcDistances({lat:o[0].geometry.location.lat(),lng:o[0].geometry.location.lng()},t).then(e=>{renderClosestLocations(10)}),place=o[0],place.geometry.viewport?map.fitBounds(place.geometry.viewport):(map.setCenter(place.geometry.location),map.setZoom(17)),place.address_components&&(e=[place.address_components[0]&&place.address_components[0].short_name||"",place.address_components[1]&&place.address_components[1].short_name||"",place.address_components[2]&&place.address_components[2].short_name||""].join(" "));const n=document.querySelector("#search_field input").value;localStorage.setItem("searchedAddress",n)}else localStorage.setItem("searchedAddress",""),renderSearchResults([]),renderMarkers(entries,map),console.log("Geocode was not successful for the following reason: "+n)})}function search(e,t){if(t.filter(e=>"fromMarkerSelect"===e).length>0){const o=entries.filter(o=>{let n=!1;return t.forEach(t=>{o[t]&&o[t].toLowerCase().includes(e.toLowerCase())&&(n=!0),"state"===t&&o[t]&&states[o[t]]&&states[o[t]].toLowerCase().includes(e.toLowerCase())&&(n=!0)}),n}).sort(getComparatorByProp("name","asc"));renderSearchResults(o),renderMarkers(o,map);const n=document.querySelector("#search_field input").value;localStorage.setItem("searchedAddress",n)}else geocodeAddress(e,entries)}function initMap(){localStorage.removeItem("searchedAddress"),map=new google.maps.Map(document.getElementById("map"),{center:{lat:37.09024,lng:-95.712891},zoom:3,maxZoom:17,disableDefaultUI:!0,styles:[{featureType:"administrative",elementType:"labels.text.fill",stylers:[{color:"#444444"}]},{featureType:"landscape",elementType:"all",stylers:[{color:"#f2f2f2"}]},{featureType:"poi",elementType:"all",stylers:[{visibility:"off"}]},{featureType:"road",elementType:"all",stylers:[{saturation:-100},{lightness:45}]},{featureType:"road.highway",elementType:"all",stylers:[{visibility:"simplified"}]},{featureType:"road.arterial",elementType:"labels.icon",stylers:[{visibility:"off"}]},{featureType:"transit",elementType:"all",stylers:[{visibility:"off"}]},{featureType:"water",elementType:"all",stylers:[{color:"#c0e4f3"},{visibility:"on"}]}]}),geocoder=new google.maps.Geocoder,infoWindow=new google.maps.InfoWindow,autoComplete(),getAllLocationData().then(e=>{showLoader(!1),renderMarkers(entries=e,map),renderSearchResults(entries),navigator.geolocation&&navigator.geolocation.getCurrentPosition(e=>{const t={lat:e.coords.latitude,lng:e.coords.longitude};map.setCenter(t),map.setZoom(14),entries&&geolocate(t,entries),initLocationRequest(t,"allowed")})}).catch(e=>{showLoader(!1)})}function initLocationRequest(e,t){"allowed"===t&&geolocate(e,entries)}function geolocate(e,t){calcDistances(e,t).then(e=>{document.querySelector("#search_field input").value="Current Location",localStorage.setItem("entries",JSON.stringify(entries)),renderClosestLocations(10,"based on localstorage data")})}function handleLocationError(e,t,o){t.setPosition(o),t.setContent(e?"Error: The Geolocation service failed.":"Error: Your browser doesn't support geolocation."),t.open(map)}function calcDistances(e,t){return new Promise((o,a)=>{if(n=t.length,0!==n)for(let a=0;a<n;a++){const s=t[a];t[a].distanceToCurrentPos=google.maps.geometry.spherical.computeDistanceBetween(new google.maps.LatLng(s.latitude,s.longitude),new google.maps.LatLng(e.lat,e.lng)),a===n-1&&setTimeout(()=>{localStorage.setItem("entries",JSON.stringify(t)),entries=t,o()},500)}else o()})}function renderClosestLocations(e,t="none"){const o=entries.filter(e=>!isNaN(e.distanceToCurrentPos)).sort(getComparatorByProp("distanceToCurrentPos","asc")).slice(0,e);renderSearchResults(o),renderMarkers(o,map)}function renderSearchResults(e){const t=document.getElementsByClassName("results").item(0);t.innerHTML="",e.forEach((e,o)=>{t.innerHTML+=`\n      <li onclick="window.open('${document.location.origin}/studio/${e.slug}', '_self')">\n        <div style="margin-bottom: 3px; display: flex; flex-direction: row; justify-content: space-between;">\n          <div class="title"><b>${e.name}${e["location-tag"]?" "+e["location-tag"]:""}</b></div>\n          <div class="miles">\n            <i>\n              ${e.distanceToCurrentPos?nFormatter((e.distanceToCurrentPos/1609).toFixed(1),1)+" mi":""}\n            </i>\n          </div>\n        </div>\n        <div class="subtitle-part" style="display: flex; flex-direction: row; justify-content: space-between;">\n          <div class="subtitle">\n            ${e["address-1"]} ${e["address-2"]||" "}<br />\n            ${e.city}, ${e.state} ${e["zip-code"]}\n          </div>\n          <span class="icon icon-right-arrow" style="align-self: flex-end;"></span>\n        </div>\n      </li>\n    `}),0===e.length&&(t.innerHTML+='\n      <div style="padding: 24px">\n        <p style="object-fit: contain; font-family: Helvetica Neue, sans-serif; font-size: 20px; font-weight: 500; font-stretch: normal; margin: 0 0 8px 0;font-style: normal; line-height: 0.9; letter-spacing: normal; color: #282828;">Sorry, we couldn\'t find any results.</p>\n        <p style="margin: 0; object-fit: contain; font-family: Helvetica Neue, sans-serif; font-size: 14px; font-weight: normal; font-stretch: normal; font-style: normal; line-height: 1.43; letter-spacing: normal; color: #131313;">Check your spelling and try again.</p>\n      </div>\n    ')}function getComparatorByProp(e,t){const o="asc"===t?1:"desc"===t?-1:1;return function(t,n){return t[e]<n[e]?-1*o:t[e]>n[e]?o:0}}function nFormatter(e,t){const o=[{value:1,symbol:""},{value:1e3,symbol:"k"},{value:1e6,symbol:"M"},{value:1e9,symbol:"G"},{value:1e12,symbol:"T"},{value:1e15,symbol:"P"},{value:1e18,symbol:"E"}];let n;for(n=o.length-1;n>0&&!(e>=o[n].value);n--);return(e/o[n].value).toFixed(t).replace(/\.0+$|(\.[0-9]*[1-9])0+$/,"$1")+o[n].symbol}function autoComplete(){const e=document.getElementById("pac-input"),t=new google.maps.places.Autocomplete(e);t.setComponentRestrictions({country:["us","ie","au","at","pr","vi","gu","mp"]}),t.bindTo("bounds",map),t.setFields(["address_components","geometry","icon","name"])}function showLoader(e){document.getElementById("loader").style.visibility=!0===e?"visible":"hidden"}